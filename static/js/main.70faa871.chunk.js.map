{"version":3,"sources":["components/header-page/HeaderPage.js","components/search-bar/SearchBar.js","configs/apiConfigs.js","features/danh-muc/dm-donvi/Dm_DonViService.js","features/danh-muc/dm-donvi/local-components/MainGrid.js","features/danh-muc/dm-donvi/Dm_DonViContainer.js","features/danh-muc/dm-donvi/Dm_DonViPage.js","features/login/LoginContainer.js","features/login/LoginPage.js","features/ttkt/TTKTPage.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderPage","props","state","listButton","name","text","icon","AddIcon","EditIcon","TrashIcon","EyeOpenIcon","className","this","length","map","item","index","Button","appearance","onClick","onAction","style","margin","iconBefore","Component","SearchBar","Heading","title","SearchInput","placeholder","width","onChange","e","onSearch","target","value","api","axios","create","baseURL","Dm_DonViService","getAll","a","get","getAllDiaBan","getAllLinhLuc","MainGrid","gridRef","console","log","diaBanData","ref","dataSource","showRowLines","showBorders","showColumnHeaders","showColumnLines","selection","mode","keyExpr","parentIdExpr","allowColumnResizing","allowColumnReordering","height","onSelectionChanged","selectedRowChanged","dataField","caption","valueExpr","displayExpr","linhVucData","dataType","alignment","format","allowedPageSizes","showPageSizeSelector","defaultPageSize","PureComponent","Dm_DonViContainer","handleSearch","mainGridRef","instance","searchByText","handleAtions","action","setState","oldState","isShowModel","loadDonVi","then","res","data","loadLookupData","isLoading","linhVuc","selectedTemplateKeyChanged","tree","selectedTemplateKey","diaBan","selectedRowsData","selectedValue","diaBanDropDownTemplate","searchPanel","visible","selectedRowKeys","onSelectedRowKeysChange","donViData","Dialog","confirmLabel","cancelLabel","isShown","onCloseComplete","header","colCount","formData","colSpan","editorType","label","message","DiaBan","contentRender","editorOptions","displayFormat","Dm_DonViPage","LoginContainer","onLoginFormChange","handleLogin","preventDefault","username","password","history","replace","rememberPassword","method","onSubmit","type","id","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70faa871.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Button } from 'evergreen-ui';\nimport { AddIcon, EditIcon, TrashIcon, EyeOpenIcon } from 'evergreen-ui'\nimport './HeaderPage.scss';\nexport class HeaderPage extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            listButton: [\n                {\n                    name: 'Them',\n                    text: 'Thêm',\n                    icon: <AddIcon />\n                },\n                {\n                    name: 'Sua',\n                    text: 'Sửa',\n                    icon: <EditIcon />\n                },\n                {\n                    name: 'Xoa',\n                    text: 'Xóa',\n                    icon: <TrashIcon />\n                },\n                {\n                    name: 'Them',\n                    text: 'Xem',\n                    icon: <EyeOpenIcon />\n                }\n            ]\n        }\n    }\n    render() {\n        return (\n            <header className=\"page-header\">\n                {\n                    this.state.listButton?.length && this.state.listButton.map((item ,index) => <Button key={index} appearance=\"primary\" onClick={() => this.props.onAction(item.name)} style={{margin: '0px 6px'}} iconBefore={item.icon}>{item.text}</Button>)\n                }\n            </header>\n        )\n    }\n}\n\nexport default HeaderPage\n","import React, { Component } from 'react'\nimport { SearchInput, Heading } from 'evergreen-ui';\nimport './SearchBar.scss';\n\nexport class SearchBar extends Component {\n    constructor(props){\n        super(props);\n    }\n  \n    render() {\n        return (\n            <div className=\"search-bar\">\n                <div className=\"title\">\n                    <Heading>{this.props.title || 'Heading...'}  </Heading>\n                </div>\n                <div className=\"search\">\n                    <SearchInput placeholder=\"Tìm kiếm...\" width=\"100%\" onChange={(e) => this.props.onSearch(e.target.value)} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar\n","import axios from 'axios';\n\n\nconst api = axios.create({\n    baseURL: 'http://103.74.122.203/kt/api'\n})\n\n\n\nexport default api;","import api from '../../../configs/apiConfigs';\n\nclass Dm_DonViService {\n    constructor(){\n        this.api = api;\n    }\n\n    static getAll = async () => {\n        return await api.get('/Dm_DonVi/GetAll');\n    }\n    static getAllDiaBan = async () => {\n        return await api.get('/Dm_DiaBan/GetAll');\n    }\n    static getAllLinhLuc = async () => {\n        return await api.get('/Dm_LinhVuc/GetAll');\n    }\n}\n\nexport default Dm_DonViService;","import React, { PureComponent } from 'react'\nimport { DataGrid } from 'devextreme-react';\nimport { Column, Lookup } from 'devextreme-react/data-grid';\nimport TreeList,{\n    Pager,\n    Paging,\n  } from 'devextreme-react/tree-list';\n\n\nexport class MainGrid extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.gridRef = null;\n    }\n    render() {\n        console.log(this.props.diaBanData, 'dia ban');\n        return (\n            <>\n                <TreeList\n                    ref={ref => this.gridRef = ref}\n                    dataSource={this.props.dataSource || []}\n                    showRowLines={true}\n                    showBorders={true}\n                    showColumnHeaders={true}\n                    showColumnLines={true}\n                    selection={{ mode: 'single' }}\n                    keyExpr=\"Id\"\n                    parentIdExpr=\"IdCha\"\n                    allowColumnResizing={true}\n                    allowColumnReordering={true}\n                    height={500}\n                    onSelectionChanged={this.props.selectedRowChanged}\n                >\n                    <Column dataField=\"Ma\" caption=\"Mã đơn vị\" width={140} />\n                    <Column dataField=\"Ten\" caption=\"Tên đơn vị\" width={240} />\n                    <Column dataField=\"DiaBan\" caption=\"Địa bàn\" >\n                        <Lookup dataSource={this.props.diaBanData} valueExpr=\"Id\" displayExpr=\"TenDB\" />\n                    </Column>\n                    <Column dataField=\"LinhVuc\" caption=\"Lĩnh vực\" >\n                        <Lookup dataSource={this.props.linhVucData} valueExpr=\"Id\" displayExpr=\"Ten\" />\n                    </Column>\n                    <Column dataField=\"NgayBatDau\" width={160} caption=\"Ngày bắt đầu\" dataType='date' alignment={'center'} format={'dd/MM/yyyy'} />\n                    <Column dataField=\"NgayKetThuc\" width={160} caption=\"Ngày kết thúc\" dataType='date' alignment={'center'} format={'dd/MM/yyyy'} />\n                    <Column dataField=\"Sdt\" caption=\"Số điện thoại\" width={140} />\n                    <Column dataField=\"GhiChu\" caption=\"Ghi chú\" />\n                    <Pager allowedPageSizes={[4, 50, 100]} showPageSizeSelector={true} />\n                    <Paging defaultPageSize={4} />\n                </TreeList>\n            </>\n        )\n    }\n}\n\nexport default MainGrid\n","import { DataGrid, DateBox, DropDownBox, TextArea, TextBox, TreeList } from 'devextreme-react';\nimport { Column, RequiredRule } from 'devextreme-react/data-grid';\nimport Form, { Label, SimpleItem } from 'devextreme-react/form';\nimport NumberBox from 'devextreme-react/number-box';\nimport { Lookup, DropDownOptions } from 'devextreme-react/lookup';\n\n\nimport { Dialog, Heading } from 'evergreen-ui';\nimport React, { PureComponent } from 'react'\nimport HeaderPage from '../../../components/header-page/HeaderPage';\nimport SearchBar from '../../../components/search-bar/SearchBar';\nimport Dm_DonViService from './Dm_DonViService';\nimport MainGrid from './local-components/MainGrid';\nimport { ColumnLookup } from 'devextreme-react/tree-list';\n\n\n\nexport class Dm_DonViContainer extends PureComponent {\n    constructor(props){\n        super(props);\n        this.mainGridRef = null;\n        this.state = {\n            dataSource: [],\n            diaBanData: [],\n            donViData: [],\n            linhVuc: [],\n            isLoading: false,\n            selectedTemplateKey: {\n                diaBan: []\n            },\n            selectedValue: null,\n            mode: 'view',\n            isShowModel: true,\n        }\n    }\n    componentDidMount(){\n        this.loadDonVi();\n        this.loadLookupData();\n    }\n\n    handleSearch = (text) => {\n        const { gridRef } = this.mainGridRef;\n        gridRef.instance.searchByText(text);\n    }\n    handleAtions = (action) => {\n        console.log('action : ', action);\n        if(action === 'Sua') {\n            this.setState((oldState) => {\n                return { isShowModel: true }\n            })\n        }\n    }\n    loadDonVi = () => {\n        Dm_DonViService.getAll().then(res => {\n            this.setState({\n                dataSource: res.data\n            })\n        });\n    }\n\n\n\n    loadLookupData = () => {\n        this.setState({isLoading: false});\n         Dm_DonViService.getAllDiaBan().then(res => {\n             this.setState({\n                diaBanData: res.data\n             })\n         })\n         Dm_DonViService.getAllLinhLuc().then(res => {\n            this.setState({\n                linhVuc: res.data\n             })\n         })\n    }\n    selectedTemplateKeyChanged = (e, tree) => {\n        const { selectedTemplateKey } = this.state;\n        if(tree === 'dia-ban'){\n            this.setState({\n                selectedTemplateKey: {\n                    ...selectedTemplateKey,\n                    diaBan: e\n                }\n            })\n        }\n    }\n\n    selectedRowChanged = (e) => {\n        let data = e.selectedRowsData[0];\n        this.setState({ selectedValue: data});\n    }\n\n    componentDidUpdate(){\n        console.log('update')\n    }\n\n    diaBanDropDownTemplate = () => {\n        return (\n            <TreeList\n                dataSource={this.state.diaBanData}\n                keyExpr=\"Id\"\n                parentIdExpr=\"DBCha\"\n                searchPanel={{visible:true}}\n                height={300}\n                showBorders={true}\n                showColumnHeaders={true}\n                showRowLines={true}\n                selection={{mode: 'single'}}\n                selectedRowKeys={this.state.selectedTemplateKey.diaBan}\n                onSelectedRowKeysChange={(e) => this.selectedTemplateKeyChanged(e, 'dia-ban')}\n            >\n                <Column dataField=\"MaDB\" caption=\"Mã địa bàn\"/>\n                <Column dataField=\"TenDB\" caption=\"Tên địa bàn\"/>\n            </TreeList>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"page-contaienr\">\n               <HeaderPage  onAction={this.handleAtions} />\n               <SearchBar title={'Danh mục đơn vị kiểm toán'} onSearch={this.handleSearch}  />\n               <div>\n                   <MainGrid ref={ref => this.mainGridRef = ref} dataSource={this.state.dataSource} diaBanData={this.state.diaBanData} linhVucData={this.state.linhVuc} selectedRowChanged={this.selectedRowChanged}  />\n                   <Dialog \n                        title=\"Thêm đơn vị\"\n                        confirmLabel=\"Lưu\"\n                        cancelLabel=\"Hủy\"\n                        isShown={this.state.isShowModel}\n                        onCloseComplete={() => this.setState({isShowModel: false})}\n                        width={'60%'}\n                        header={() => <Heading >Thêm mới đơn vị</Heading>}\n                    >\n                       <div>\n                           <Form colCount={12}\n                                formData={{  ...this.state.selectedValue }}\n                            >\n                               <SimpleItem colSpan={6}  editorType=\"dxTextBox\" dataField=\"Ma\" label={{text: 'Mã đơn vị'}}>\n                                   <RequiredRule message=\"Mã đơn vị là trường bắt buộc\"/>\n                               </SimpleItem>\n                               <SimpleItem colSpan={6} editorType=\"dxDropDownBox\" dataField=\"IdCha\"  label={{text: 'Đơn vị cha'}}>\n                                   \n                               </SimpleItem>\n                               <SimpleItem colSpan={6} editorType=\"dxTextBox\" dataField=\"Ten\" label={{text: 'Tên đơn vị'}}>\n                                    <RequiredRule message=\"Đơn vị là trường bắt buộc\"/>\n                               </SimpleItem>\n                               <SimpleItem colSpan={6} editorType=\"dxDropDownBox\" dataField=\"DiaBan\"  label={{text: 'Địa bàn'}} >\n                                    <DropDownBox dataSource={this.state.diaBanData} value={this.state.selectedValue?.DiaBan}  valueExpr=\"Id\" displayExpr=\"TenDB\"  contentRender={this.diaBanDropDownTemplate}/>\n                                    <RequiredRule message=\"Địa bàn là trường bắt buộc\"/>\n                               </SimpleItem>\n                               <SimpleItem colSpan={6} editorType=\"dxDateBox\" dataField=\"NgayBatDau\" editorOptions={{ displayFormat: 'dd/MM/yyyy'}} label={{text: 'Ngày bắt đầu'}}>\n                                   <RequiredRule message=\"Ngày bắt đầu là trường bắt buộc\"/>\n                               </SimpleItem>\n                               \n                               <SimpleItem colSpan={6} editorType=\"dxDropDownBox\"  label={{text: 'Lĩnh vực'}}>\n                                    <RequiredRule message=\"Lĩnh vực là trường bắt buộc\"/>\n                               </SimpleItem>\n                               <SimpleItem colSpan={6} editorType=\"dxDateBox\" dataField=\"NgayKetThuc\" editorOptions={{ displayFormat: 'dd/MM/yyyy'}} label={{text: 'Ngày bắt đầu'}}>\n                                   <Label text=\"Ngày kết thúc\"   />\n                                   <RequiredRule message=\"Ngày bắt đầu là trường bắt buộc\"/>\n                               </SimpleItem>\n                               <SimpleItem colSpan={6} dataField=\"Sdt\" editorType=\"dxTextBox\" label={{text: 'Số điện thoại'}}>\n                               </SimpleItem>\n                               <SimpleItem colSpan={12} editorType=\"dxTextArea\" label={{text: 'Ghi chú'}}>\n                               </SimpleItem>\n                           </Form>\n                       </div>\n                   </Dialog>\n               </div>\n            </div>\n        )\n    }\n}\n\nexport default Dm_DonViContainer\n","import React, { Component } from 'react'\nimport Dm_DonViContainer from './Dm_DonViContainer'\n\nexport class Dm_DonViPage extends Component {\n    render() {\n        return (\n            <>\n                <Dm_DonViContainer />\n            </>\n        )\n    }\n}\n\nexport default Dm_DonViPage\n","import React, { Component } from 'react'\nimport './Login.scss'\n\nexport class LoginContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            rememberPassword: false\n        }\n    }\n\n    onLoginFormChange = (e) => {\n        const { value, name } = e.target;\n        this.setState({ [name]: value });\n    }\n\n    handleLogin = (e) => {\n        e.preventDefault();\n        const { username, password } = this.state;\n        if (username === 'adminkt' && password === '123456') {\n            this.props.history.replace('/ttkt');\n        }\n    }\n\n    render() {\n        const { username, password } = this.state;\n        return (\n            <section className=\"container\">\n                <div className=\"login\">\n                    <h1>Đăng nhập chương trình</h1>\n                    <form method=\"post\" onSubmit={this.handleLogin}>\n                        <p><input type=\"text\" name=\"username\" value={username} placeholder=\"Nhập tài khoản\" onChange={this.onLoginFormChange} /></p>\n                        <p><input type=\"password\" name=\"password\" value={password} placeholder=\"Nhập mật khẩu\" onChange={this.onLoginFormChange} /></p>\n                        <p className=\"remember_me\">\n                            <label>\n                                <input type=\"checkbox\" name=\"remember_me\" id=\"remember_me\" />\n                            Nhớ mật khẩu\n                        </label>\n                        </p>\n                        <p className=\"submit\"><input type=\"submit\" name=\"commit\" value=\"đăng nhập\" /></p>\n                    </form>\n                </div>\n\n                <div className=\"login-help\">\n                    <p>© <a href=\"index.html\">FSC & HCM - 2022</a>.</p>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default LoginContainer\n","import React, { Component } from 'react'\nimport LoginContainer from './LoginContainer'\n\nexport class LoginPage extends Component {\n    constructor(props){\n        super(props);\n    }\n    render() {\n        return (\n            <>\n                <LoginContainer {...this.props} />\n            </>\n        )\n    }\n}\n\nexport default LoginPage\n","import React, { Component } from 'react'\n\nexport class TTKTPage extends Component {\n    render() {\n        return (\n            <>\n                <TTKTPage />\n            </>\n        )\n    }\n}\n\nexport default TTKTPage\n","import Dm_DonViPage from \"./features/danh-muc/dm-donvi/Dm_DonViPage\";\nimport Routes from \"./routes/Routes\";\nimport 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport './themes/theme.scss';\nimport classNames from \"classnames\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Dm_DonViPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}